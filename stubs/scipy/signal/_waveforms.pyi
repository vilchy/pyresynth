from _typeshed import Incomplete
from typing import List, Literal
import numpy.typing as npt


def sawtooth(t, width: int = ...): ...
def square(t: npt.ArrayLike, duty: npt.ArrayLike = ...) -> npt.NDArray: ...


def gausspulse(t, fc: int = ..., bw: float = ..., bwr: int = ...,
               tpr: int = ..., retquad: bool = ..., retenv: bool = ...): ...
def chirp(t: npt.ArrayLike, f0: float, t1: float, f1: float, method: Literal['linear', 'quadratic', 'logarithmic', 'hyperbolic'] = ...,
          phi: float = ..., vertex_zero: bool = ...) -> npt.NDArray: ...


def sweep_poly(t, poly, phi: int = ...): ...
def unit_impulse(shape, idx: Incomplete | None = ..., dtype=...): ...
